=head1 NAME

Mozilla::DOM::HTMLTableCellElement

=for object Mozilla::DOM::HTMLTableCellElement

Mozilla::DOM::HTMLTableCellElement is a wrapper around an instance of Mozilla's
nsIDOMHTMLTableCellElement interface. This class inherits from
L<HTMLElement|Mozilla::DOM::HTMLElement>.

 * The nsIDOMHTMLTableCellElement interface is the interface to a
 * [X]HTML td element.
 *
 * For more information on this interface please see
 * http://www.w3.org/TR/DOM-Level-2-HTML/
 *
 * @status FROZEN

=head1 CLASS METHODS

=head2 $iid = Mozilla::DOM::HTMLTableCellElement->B<GetIID>()

Pass this to QueryInterface.

=head1 METHODS

=head2 $abbr = $htmltablecellelement->B<GetAbbr>()

=head2 $align = $htmltablecellelement->B<GetAlign>()

=head2 $axis = $htmltablecellelement->B<GetAxis>()

=head2 $bgcolor = $htmltablecellelement->B<GetBgColor>()

=head2 $cellindex = $htmltablecellelement->B<GetCellIndex>()

=head2 $ch = $htmltablecellelement->B<GetCh>()

=head2 $choff = $htmltablecellelement->B<GetChOff>()

=head2 $colspan = $htmltablecellelement->B<GetColSpan>()

=head2 $headers = $htmltablecellelement->B<GetHeaders>()

=head2 $height = $htmltablecellelement->B<GetHeight>()

=head2 $bool = $htmltablecellelement->B<GetNoWrap>()

=head2 $rowspan = $htmltablecellelement->B<GetRowSpan>()

=head2 $scope = $htmltablecellelement->B<GetScope>()

=head2 $valign = $htmltablecellelement->B<GetVAlign>()

=head2 $width = $htmltablecellelement->B<GetWidth>()

=head2 $htmltablecellelement->B<SetAbbr>($abbr)

=over

=over

=item * $abbr (string)

=back

=back

=head2 $htmltablecellelement->B<SetAlign>($align)

=over

=over

=item * $align (string)

=back

=back

=head2 $htmltablecellelement->B<SetAxis>($axis)

=over

=over

=item * $axis (string)

=back

=back

=head2 $htmltablecellelement->B<SetBgColor>($bgcolor)

=over

=over

=item * $bgcolor (string)

=back

=back

=head2 $htmltablecellelement->B<SetCh>($ch)

=over

=over

=item * $ch (string)

=back

=back

=head2 $htmltablecellelement->B<SetChOff>($choff)

=over

=over

=item * $choff (string)

=back

=back

=head2 $htmltablecellelement->B<SetColSpan>($colspan)

=over

=over

=item * $colspan (integer (long))

=back

=back

=head2 $htmltablecellelement->B<SetHeaders>($headers)

=over

=over

=item * $headers (string)

=back

=back

=head2 $htmltablecellelement->B<SetHeight>($height)

=over

=over

=item * $height (string)

=back

=back

=head2 $htmltablecellelement->B<SetNoWrap>($nowrap)

=over

=over

=item * $nowrap (boolean)

=back

=back

=head2 $htmltablecellelement->B<SetRowSpan>($rowspan)

=over

=over

=item * $rowspan (integer (long))

=back

=back

=head2 $htmltablecellelement->B<SetScope>($scope)

=over

=over

=item * $scope (string)

=back

=back

=head2 $htmltablecellelement->B<SetVAlign>($valign)

=over

=over

=item * $valign (string)

=back

=back

=head2 $htmltablecellelement->B<SetWidth>($width)

=over

=over

=item * $width (string)

=back

=back

=head1 SEE ALSO

L<Mozilla::DOM>

=head1 COPYRIGHT

Copyright (C) 2005-2007, Scott Lanning

This software is licensed under the LGPL.  See L<Mozilla::DOM> for a full notice.

=cut

