=head1 NAME

Mozilla::DOM::NSHTMLDocument

=for object Mozilla::DOM::NSHTMLDocument

Mozilla::DOM::NSHTMLDocument is a wrapper around an instance of Mozilla's
nsIDOMNSHTMLDocument interface. This class inherits from
L<Supports|Mozilla::DOM::Supports>.

=head1 CLASS METHODS

=head2 $iid = Mozilla::DOM::NSHTMLDocument->B<GetIID>()

Pass this to QueryInterface.

=head1 METHODS

=head2 $alinkcolor = $nshtmldocument->B<GetAlinkColor>()

Output:

=over

=item $alinkcolor (string)

=back

=head2 $nshtmldocument->B<SetAlinkColor>($alinkcolor)

Input:

=over

=item $aAlinkColor (string)

=back

=head2 $bgcolor = $nshtmldocument->B<GetBgColor>()

Output:

=over

=item $bgcolor (string)

=back

=head2 $nshtmldocument->B<SetBgColor>($bgcolor)

Input:

=over

=item $aBgColor (string)

=back

=head2 $compatmode = $nshtmldocument->B<GetCompatMode>()

=head2 $domain = $nshtmldocument->B<GetDomain>()

Output:

=over

=item $domain (string)

=back

=head2 $nshtmldocument->B<SetDomain>($domain)

Input:

=over

=item $aDomain (string)

=back

=head2 $embeds = $nshtmldocument->B<GetEmbeds>()

Output:

=over

=item $embeds (Mozilla::DOM::HTMLCollection)

=back

In list context, returns a list of whatever $embeds->Item($n) returns
(no idea).

=head2 $fgcolor = $nshtmldocument->B<GetFgColor>()

Output:

=over

=item $fgcolor (string)

=back

=head2 $nshtmldocument->B<SetFgColor>($fgcolor)

Input:

=over

=item $aFgColor (string)

=back

=head2 $height = $nshtmldocument->B<GetHeight>()

Output:

=over

=item $height (int)

=back

=head2 $linkcolor = $nshtmldocument->B<GetLinkColor>()

Output:

=over

=item $linkcolor (string)

=back

=head2 $nshtmldocument->B<SetLinkColor>($linkcolor)

Input:

=over

=item $aLinkColor (string)

=back

=head2 $retval = $nshtmldocument->B<GetSelection>()

Output:

=over

=item $retval (string)

=back

=head2 $width = $nshtmldocument->B<GetWidth>()

Output:

=over

=item $width (int)

=back

=head2 $vlinkcolor = $nshtmldocument->B<GetVlinkColor>()

Output:

=over

=item $vlinkcolor (string)

=back

=head2 $nshtmldocument->B<SetVlinkColor>($vlinkcolor)

Input:

=over

=item $aVlinkColor (string)

=back

=head2 $nshtmldocument->B<Clear>()

=head2 $nshtmldocument->B<CaptureEvents>($eventflags)

Input:

=over

=item $eventFlags (int)

=back

=head2 $bool = $nshtmldocument->B<ExecCommand>($commandid, $doshowui, $value)

Input:

=over

=item $commandID (string)

=item $doShowUI (bool)

=item $value (string)

=back

Output:

=over

=item $bool (bool)

=back

=head2 $bool = $nshtmldocument->B<ExecCommandShowHelp>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $bool (bool)

=back

=head2 $retval = $nshtmldocument->B<Open>()

Output:

=over

=item $retval (Mozilla::DOM::Document)

=back

=head2 $bool = $nshtmldocument->B<QueryCommandEnabled>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $bool (bool)

=back

=head2 $bool = $nshtmldocument->B<QueryCommandIndeterm>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $bool (bool)

=back

=head2 $bool = $nshtmldocument->B<QueryCommandState>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $bool (bool)

=back

=head2 $bool = $nshtmldocument->B<QueryCommandSupported>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $bool (bool)

=back

=head2 $retval = $nshtmldocument->B<QueryCommandText>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $retval (string)

=back

=head2 $retval = $nshtmldocument->B<QueryCommandValue>($commandid)

Input:

=over

=item $commandID (string)

=back

Output:

=over

=item $retval (string)

=back

=head2 $nshtmldocument->B<ReleaseEvents>($eventflags)

Input:

=over

=item $eventFlags (int)

=back

=head2 $nshtmldocument->B<RouteEvent>($evt)

Input:

=over

=item $evt (Mozilla::DOM::Event)

=back

=head2 $nshtmldocument->B<Write>()

=head2 $nshtmldocument->B<Writeln>()

Output:

=over

=item $compatmode (string)

=back

=head2 $designmode = $nshtmldocument->B<GetDesignMode>()

Output:

=over

=item $designmode (string)

=back

=head2 $nshtmldocument->B<SetDesignMode>($designmode)

Input:

=over

=item $aDesignMode (string)

=back

=head2 $plugins = $nshtmldocument->B<GetPlugins>()

Output:

=over

=item $plugins (Mozilla::DOM::HTMLCollection)

=back

In list context, returns a list of whatever $plugins->Item($n) returns
(no idea).

=head1 SEE ALSO

L<Mozilla::DOM>

=head1 COPYRIGHT

Copyright (C) 2005, Scott Lanning

This software is licensed under the LGPL.  See L<Mozilla::DOM> for a full notice.

=cut

